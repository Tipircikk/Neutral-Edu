
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true; // Allow all users to read profile for now, can be restricted
      allow write: if request.auth.uid == userId || 
                       (request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      // Users can update their own profile. Admins can update any profile.
      // Ensure users cannot make themselves admin or change critical fields unless an admin does it.
      // Example: allow update: if request.auth.uid == userId && !(request.resource.data.isAdmin == true && resource.data.isAdmin == false);
      // This rule needs careful crafting based on what fields users can self-edit vs admin-only fields.
    }

    match /supportTickets/{ticketId} {
      allow read: if request.auth.uid == resource.data.userId || 
                      (request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if request.auth.uid == request.resource.data.userId
                    && request.resource.data.status == "open"
                    && request.resource.data.createdAt == request.time
                    && request.resource.data.userId == request.auth.uid; // Ensure user is creating their own ticket
      allow update: if (request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true) ||
                       (request.auth.uid == resource.data.userId && request.resource.data.status == "closed_by_user"); // User can close their own ticket
      allow delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Add other collection rules here if needed
  }
}
